#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    //automouse-layer = <4>;

    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        backspace {
            bindings = <&mt_exit_AML_on_hold DELETE BACKSPACE>;
            key-positions = <8 9>;
            layers = <0 2 1>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <7 8>;
            layers = <0 1>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <6 7>;
            layers = <0 1>;
        };

        fanction_7 {
            bindings = <&kp_exit_AML F7>;
            key-positions = <5 6>;
            layers = <0 1>;
        };

        language {
            bindings = <&kp LS(CLCK)>;
            key-positions = <0 1>;
            layers = <0 1>;
        };

        center_alignment {
            bindings = <&center_alignment>;
            key-positions = <40 41>;
            layers = <0>;
        };

        vertical_alignment {
            bindings = <&vertical_center_alignment>;
            key-positions = <16 28>;
            layers = <0>;
        };

        num {
            bindings = <&kp KP_NUMLOCK>;
            key-positions = <0 1>;
            layers = <2>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        exit_AML: exit_AML {
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings = <&tog_off MOUSE>;
            label = "exit_AML";
        };

        kp_exit_AML: kp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &exit_AML>;
            label = "KP_exit_AML";
        };

        mod_exit_AML: mod_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&exit_AML>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>;

            label = "MOD_exit_AML";
        };

        mo_exit_AML: mo_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &mo MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&exit_AML>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &mo MACRO_PLACEHOLDER>,
                <&macro_tap>;

            label = "MO_exit_AML";
        };

        mkp_exit_AML: mkp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&sl_250 MOUSE>;

            label = "MKP_EXIT_AML";
        };

        shift_click: shift_crick {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&mkp LCLK>,
                <&macro_release>,
                <&kp LEFT_SHIFT>;

            label = "SHIFT_CRICK";
        };

        control_click: contolor_click {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&mkp LCLK>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "CONTOLOR_CLICK";
        };

        remove_duplicates: choufuku {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp A &kp M>;
            label = "CHOUFUKU";
        };

        window_hold: window_hold {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp W &kp F &kp F>;
            label = "WINDOW_HOLD";
        };

        merging_cells: merging_cells {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp H &kp M &kp C>;
            label = "MERGING_CELLS";
        };

        left_alignment: left_alignment {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp H &kp A &kp L>;
            label = "LEFT_ALIGNMENT";
        };

        center_alignment: center_alignment {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp H &kp A &kp C>;
            label = "CENTER_ALIGNMENT";
        };

        right_alignment: right_alignment {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp H &kp A &kp R>;
            label = "RIGHT_ALIGNMENT";
        };

        top_alignment: top_alignment {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp H &kp A &kp T>;
            label = "TOP_ALIGNMENT";
        };

        vertical_center_alignment: vertical_center_alignment {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp H &kp A &kp M>;
            label = "VERTICAL_CENTER_ALIGNMENT";
        };

        bottom_alignment: bottom_alignment {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp H &kp A &kp B>;
            label = "BOTTOM_ALIGNMENT";
        };

        sum: sum {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp M &kp U &kp S>;
            label = "SUM";
        };

        sumproduct: sumproduct {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp S &kp U &kp M &kp P &kp R &kp O &kp D &kp U &kp C &kp T &kp LEFT_PARENTHESIS>;
            label = "SUMPRODUCT";
        };

        vlookup: vlookup {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp I &kp F &kp N &kp A &kp LEFT_PARENTHESIS &kp V &kp L &kp O &kp O &kp K &kp U &kp P &kp LEFT_PARENTHESIS>;
            label = "VLOOKUP";
        };

        round: round {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp R &kp O &kp U &kp N &kp D &kp LEFT_PARENTHESIS &kp LEFT_PARENTHESIS>;
            label = "ROUND";
        };

        paste_formulas_only: paste_formulas_only {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp S &kp F &kp ENTER>;
            label = "PASTE_FORMULAS_ONLY";
        };

        transpose_and_paste: transpose_and_paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp S &kp E &kp V &kp ENTER>;
            label = "TRANSPOSE_AND_PASTE";
        };

        paste_memo_only: paste_memo_only {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp S &kp C &kp ENTER>;
            label = "PASTE_MEMO_ONLY";
        };

        auto_calculation: auto_calculation {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp M &kp X &kp A>;
            label = "AUTO_CALCULATION";
        };

        auto_calculation_off: auto_calculation_off {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp M &kp X &kp M>;
            label = "AUTO_CALCULATION_OFF";
        };

        face_default: face_default {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp MINUS &kp UNDERSCORE &kp MINUS &kp Q &kp V>;
            label = "FACE_DEFAULT";
        };

        face_sumareji: face_sumareji {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp MINUS &kp UNDERSCORE &kp MINUS &kp Q &kp V &kp N1 &kp N9 &kp N0 &kp N1>;
            label = "FACE_SUMAREJI";
        };

        face_google: face_google {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp MINUS &kp UNDERSCORE &kp MINUS &kp Q &kp V &kp N1 &kp N9 &kp N0 &kp N1 &kp K &kp C &kp N8 &kp N9 &kp LS(K) &kp N2 &kp N0 &kp K &kp I &kp S &kp A &kp B>;
            label = "FACE_GOOGLE";
        };

        double_zero: double_zero {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp KP_NUMBER_0 &kp KP_NUMBER_0>;
            label = "DOUBLE_ZERO";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        ROTATE: ROTATE {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "ROTATE";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <20>;
        };

        sl_250: sl_250 {
            compatible = "zmk,behavior-sticky-key";
            label = "SL_250";
            bindings = <&mo>;
            #binding-cells = <1>;
            release-after-ms = <250>;
        };

        tog_off: toggle_layer_off {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };

        lt_exit_AML: lt_exit_AML {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_exit_AML";
            bindings = <&mo_exit_AML>, <&kp_exit_AML>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "balanced";
        };

        lt_exit_AML_on_hold: lt_exit_AML_on_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_exit_AML_ON_HOLD";
            bindings = <&mo_exit_AML>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "balanced";
        };

        lt_exit_AML_on_tap: lt_exit_AML_on_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_exit_AML_ON_tap";
            bindings = <&mo>, <&kp_exit_AML>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "balanced";
        };

        mt_exit_AML: mt_exit_AML {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_exit_AML";
            bindings = <&mod_exit_AML>, <&kp_exit_AML>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            quick-tap-ms = <200>;
        };

        mt_exit_AML_on_hold: mt_exit_AML_on_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_exit_AML_ON_HOLD";
            bindings = <&mod_exit_AML>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            quick-tap-ms = <200>;
        };

        mt_exit_AML_on_tap: mt_exit_AML_on_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_exit_AML_ON_TAP";
            bindings = <&kp>, <&kp_exit_AML>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            quick-tap-ms = <200>;
        };

        ht_kp_mkp_exit_AML: ht_kp_mkp_exit_AML {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_kp_mkp_exit_AML";
            bindings = <&kp_exit_AML>, <&mkp_exit_AML>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "balanced";
        };

        ht_kp_ketsugou: ht_kp_ketsugou {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_KP_KETSUGOU";
            bindings = <&merging_cells>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "balanced";
        };

        ht_kp_remove: ht_kp_remove {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_KP_REMOVE";
            bindings = <&remove_duplicates>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "balanced";
        };

        ht_kp_windowh: ht_kp_windowh {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_KP_WINDOWH";
            bindings = <&window_hold>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "balanced";
        };

        ht_kp_calculation: ht_kp_calculation {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_KP_CALCULATION";
            bindings = <&auto_calculation>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "balanced";
        };

        ht_kp_calculation_off: ht_kp_calculation_off {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_KP_CALCULATION_OFF";
            bindings = <&auto_calculation_off>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "balanced";
        };

        ht_kp_transpose: ht_kp_transpose {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_KP_TRANSPOSE";
            bindings = <&transpose_and_paste>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "balanced";
        };

        ht_kp_memo: ht_kp_memo {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_KP_MEMO";
            bindings = <&paste_memo_only>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "balanced";
        };

        ht_kp_left_align: ht_kp_left_align {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_KP_LEFT_ALIGN";
            bindings = <&left_alignment>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "balanced";
        };

        ht_kp_right_align: ht_kp_right_align {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_KP_RIGHT_ALIGN";
            bindings = <&right_alignment>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "balanced";
        };

        ht_kp_top_align: ht_kp_top_align {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_KP_TOP_ALIGN";
            bindings = <&top_alignment>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "balanced";
        };

        ht_kp_bottom_align: ht_kp_bottom_align {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_KP_BOTTOM_ALIGN";
            bindings = <&bottom_alignment>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "balanced";
        };

        ht_vlookup_formulas: ht_vlookup_formulas {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_VLOOKUP_FORMULAS";
            bindings = <&paste_formulas_only>, <&vlookup>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "balanced";
        };

        tap_num_b: tap_num_b {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_NUM_B";
            #binding-cells = <0>;
            bindings = <&kp EQUAL>, <&sum>, <&sumproduct>;

            tapping-term-ms = <250>;
        };

        tap_num_g: tap_num_g {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_NUM_G";
            #binding-cells = <0>;
            bindings =
                <&mt LC(KP_MINUS) KP_MINUS>,
                <&mt LS(LA(LEFT_ARROW)) KP_MINUS>;

            tapping-term-ms = <250>;
        };

        tap_num_r: tap_num_r {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_NUM_R";
            #binding-cells = <0>;
            bindings = <&kp KP_ASTERISK>, <&round>;

            tapping-term-ms = <250>;
        };

        tap_num_v: tap_num_v {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_NUM_V";
            #binding-cells = <0>;
            bindings = <&mt LC(LS(V)) EQUAL>, <&ht_vlookup_formulas 0 0>;

            tapping-term-ms = <250>;
        };

        tap_space: tap_space {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_SPACE";
            #binding-cells = <0>;
            bindings = <&lt 2 SPACE>, <&lt 1 LS(SPACE)>, <&lt 3 LC(SPACE)>;

            tapping-term-ms = <250>;
        };

        ht_zero_hold: ht_zero_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_ZERO_HOLD";
            bindings = <&kp>, <&double_zero>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt Q TAB               &ht_kp_windowh 0 W     &kp E                   &ht_kp_remove 0 R                 &kp T                                                                                                &kp Y                             &kp U  &kp I                &lt 5 O        &mt LEFT_BRACKET P
&kp A                   &kp S                  &kp D                   &mt LC(LS(L)) F                   &mt LS(LA(RIGHT_ARROW)) G  &kp LG(LS(S))                           &ht_kp_top_align 0 UP_ARROW       &kp H                             &kp J  &ht_kp_ketsugou 0 K  &mt AT_SIGN L  &mt RIGHT_BRACKET MINUS
&mt LEFT_SHIFT Z        &kp X                  &ht_kp_calculation 0 C  &mt LC(V) V                       &lt 6 B                    &mt LG(E) LS(CAPSLOCK)                  &ht_kp_bottom_align 0 DOWN_ARROW  &kp N                             &kp M  &mt SEMICOLON COMMA  &mt COLON DOT  &mt LEFT_SHIFT SLASH
&mt LEFT_CONTROL LC(C)  &mt LEFT_WIN LEFT_WIN  &mt LEFT_ALT LG(TAB)    &mt_exit_AML_on_hold HOME DELETE  &tap_space                 &mt_exit_AML_on_hold END BACKSPACE      &ht_kp_left_align 0 LEFT_ARROW    &ht_kp_right_align 0 RIGHT_ARROW                                             &lt 2 ENTER
            >;

            sensor-bindings = <&ROTATE SCRL_DOWN SCRL_UP>;
        };

        SYMBOL {
            bindings = <
&kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp HASH  &kp DOLLAR  &kp PERCENT                      &kp AMPERSAND  &kp GRAVE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH
&trans           &trans             &trans    &trans      &trans       &trans      &trans  &trans         &trans     &trans                &trans                 &kp LS(MINUS)
&trans           &trans             &trans    &trans      &trans       &trans      &trans  &trans         &trans     &trans                &trans                 &kp LS(SLASH)
&trans           &trans             &trans    &trans      &trans       &trans      &trans  &trans                                                                 &trans
            >;
        };

        MOUSE_NUM {
            bindings = <
&mt ESCAPE KP_NUMBER_7        &kp KP_NUMBER_8                  &mt F9 KP_NUMBER_9                    &tap_num_r               &ht_kp_transpose 0 KP_SLASH                                               &kp LS(SPACE)                        &shift_click       &mkp LCLK           &trans               &mkp RCLK
&mt F4 KP_NUMBER_4            &mt LC(NUMBER_1) KP_NUMBER_5     &kp KP_NUMBER_6                       &mt LC(KP_PLUS) KP_PLUS  &tap_num_g                   &trans      &kp LC(LS(TAB))                  &kp LC(SPACE)                        &control_click     &kp LA(LS(K))       &kp LC(T)            &kp LG(D)
&mt LEFT_SHIFT KP_NUMBER_1    &mt F2 KP_NUMBER_2               &ht_kp_calculation_off 0 KP_NUMBER_3  &tap_num_v               &tap_num_b                   &trans      &kp LC(TAB)                      &trans                               &ht_kp_memo 0 F12  &kp LA(LEFT_ARROW)  &kp LA(RIGHT_ARROW)  &kp LC(W)
&mt LEFT_CONTROL KP_NUMBER_0  &ht_zero_hold LC(KP_NUMBER_0) 0  &kp KP_DOT                            &trans                   &trans                       &trans      &mt LC(LS(PAGE_UP)) LC(PAGE_UP)  &mt LC(LS(PAGE_DOWN)) LC(PAGE_DOWN)                                                              &trans
            >;
        };

        APP_CTRL_PASS {
            bindings = <
&kp LG(N1)  &kp LG(N2)      &kp LG(N3)     &kp LG(N4)  &kp LG(N5)                        &kp LG(N6)  &kp LG(N7)  &kp LG(N8)  &kp LG(N9)  &kp LC(N0)
&trans      &face_sumareji  &face_default  &trans      &face_google  &trans      &trans  &trans      &trans      &trans      &trans      &trans
&trans      &trans          &trans         &trans      &trans        &trans      &trans  &trans      &trans      &trans      &trans      &trans
&trans      &trans          &trans         &trans      &trans        &trans      &trans  &trans                                          &trans
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &mkp LCLK  &trans  &mkp RCLK
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                             &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans           &trans           &trans           &trans                                   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans           &trans           &trans           &trans  &trans           &studio_unlock  &trans        &trans        &trans        &trans        &trans
&trans  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans  &bootloader      &bootloader     &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans           &trans           &trans           &trans  &trans           &trans          &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
